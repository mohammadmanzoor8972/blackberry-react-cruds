{"version":3,"sources":["components/forms/AddStudentFrom.js","components/forms/EditStudentForm.js","components/pagination/Pagination.js","components/tables/StudentTable.js","components/search/SeachInput.js","helpers/sortBy.js","data/student.js","App.js","index.js"],"names":["AddStudentFrom","addStudent","initialFormState","id","name","address","dob","gender","class","useState","student","setStudent","handleInputChange","event","target","value","onSubmit","preventDefault","type","onChange","disabled","className","EditStudentForm","props","currentStudent","studentData","setStudentData","useEffect","updateUser","selected","onClick","setEditing","Pagination","state","pager","this","items","length","setPage","initialPage","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","pageSize","startPage","endPage","Math","ceil","min","pages","Array","keys","map","i","index","key","React","Component","defaultProps","StudentTable","studensList","sortBy","editRow","deleteUser","setPageOfItems","Fragment","ev","sortKey","innerText","trim","style","cursor","aria-hidden","user","padding","colSpan","SearchInput","filterUser","filter","setFilter","display","array","sort","a","b","dataA","toLowerCase","dataB","comparison","defaultStudentsData","App","students","setStudents","setcurrentStudent","editing","updatedStudent","searchText","indexOf","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e066ae89.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport propTypes from 'prop-types'\n\nconst AddStudentFrom = ({addStudent}) => {\n\tconst initialFormState = { id: null, name: '', address: '', dob:'', gender:'', class:'' }\n\tconst [ student, setStudent ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetStudent({ ...student, [name]: value })\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif (!student.name) return\n\n\t\t\t\taddStudent(student)\n\t\t\t\tsetStudent(initialFormState)\n\t\t\t}}\n\t\t>\n\t\t\t<label>Name</label>\n\t\t\t<input type=\"text\" name=\"name\" value={student.name} onChange={handleInputChange} />\n\t\t\t<label>Address</label>\n\t\t\t<input type=\"text\" name=\"address\" value={student.address} onChange={handleInputChange} />\n\t\t\t<label>Dob</label>\n\t\t\t<input type=\"date\" name=\"dob\" value={student.dob} onChange={handleInputChange} />\n\t\t\t<label>Gender</label>\n\t\t\t<select id=\"Gender\" name=\"gender\" onChange={handleInputChange} >\n\t\t\t\t<option disabled>Please select</option>\n\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t</select>\n\t\t\t<label>Class</label>\n\t\t\t<input type=\"text\" name=\"class\" value={student.class} onChange={handleInputChange} />\n\t\t\t<button className=\"btn btn-info\">Add new Student</button>\n\n\t\t\t\n\t\t</form>\n\t)\n}\n\nAddStudentFrom.propTypes = {\n\taddStudent:propTypes.func.isRequired\n}\n\n\n\nexport default AddStudentFrom\n","import React, { useState, useEffect } from 'react'\n\nconst EditStudentForm = props => {\n  const [ studentData, setStudentData ] = useState(props.currentStudent)\n\n  useEffect(\n    () => {\n      setStudentData(props.currentStudent)\n    },\n    [ props ]\n  )\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setStudentData({ ...studentData, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateUser(studentData.id, studentData)\n      }}\n    >\n    <label>Name</label>\n\t\t\t<input type=\"text\" name=\"name\" value={studentData.name} onChange={handleInputChange} />\n\t\t\t<label>Address</label>\n\t\t\t<input type=\"text\" name=\"address\" value={studentData.address} onChange={handleInputChange} />\n\t\t\t<label>Dob</label>\n\t\t\t<input type=\"date\" name=\"dob\" value={studentData.dob} onChange={handleInputChange} />\n\t\t\t<select id=\"Gender\" value={studentData.gender} name=\"gender\" onChange={handleInputChange} >\n    <option disabled selected >Please select</option>\n    <option value=\"male\">Male</option>\n    <option value=\"female\">Female</option>\n  </select>\n\t\t\t<label>Class</label>\n\t\t\t<input type=\"text\" name=\"class\" value={studentData.class} onChange={handleInputChange} />\n      <button className=\"btn btn-info btn-sm\">Update Student</button>\n      <button onClick={() => props.setEditing(false)} className=\"btn btn-info btn-sm\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditStudentForm\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = { pager: {} };\n  }\n\n  componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n          this.setPage(this.props.initialPage);\n      }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n          this.setPage(this.props.initialPage);\n      }\n  }\n\n  setPage(page) {\n      var items = this.props.items;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n          return;\n      }\n\n      // get new pager object for specified page\n      pager = this.getPager(items.length, page);\n\n      // get new page of items from items array\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n      // update state\n      this.setState({ pager: pager });\n\n      // call change page function in parent component\n      this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1;\n\n      // default page size is 10\n      pageSize = pageSize || 5;\n\n      // calculate total pages\n      var totalPages = Math.ceil(totalItems / pageSize);\n\n      var startPage, endPage;\n      if (totalPages <= 10) {\n          // less than 10 total pages so show all\n          startPage = 1;\n          endPage = totalPages;\n      } else {\n          // more than 10 total pages so calculate start and end pages\n          if (currentPage <= 6) {\n              startPage = 1;\n              endPage = 10;\n          } else if (currentPage + 4 >= totalPages) {\n              startPage = totalPages - 9;\n              endPage = totalPages;\n          } else {\n              startPage = currentPage - 5;\n              endPage = currentPage + 4;\n          }\n      }\n\n      // calculate start and end item indexes\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      // create an array of pages to ng-repeat in the pager control\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n      // return object with all pager properties required by the view\n      return {\n          totalItems: totalItems,\n          currentPage: currentPage,\n          pageSize: pageSize,\n          totalPages: totalPages,\n          startPage: startPage,\n          endPage: endPage,\n          startIndex: startIndex,\n          endIndex: endIndex,\n          pages: pages\n      };\n  }\n\n  render() {\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n          // don't display pager if there is only 1 page\n          return null;\n      }\n\n      return (\n          <ul className=\"pagination\">\n              <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                  <a onClick={() => this.setPage(1)}>First</a>\n              </li>\n              <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                  <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n              </li>\n              {pager.pages.map((page, index) =>\n                  <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                      <a onClick={() => this.setPage(page)}>{page}</a>\n                  </li>\n              )}\n              <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                  <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n              </li>\n              <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                  <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n              </li>\n          </ul>\n      );\n  }\n}\n\nPagination.propTypes =  {\n  items: PropTypes.array,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number    \n}\n\nPagination.defaultProps =  {\n  initialPage: 1\n};\n\n\nexport default Pagination;","import React, { useState } from 'react'\nimport Pagination from '../pagination/Pagination';\nimport PropTypes from 'prop-types';\n\nconst StudentTable = ({studensList, sortBy, editRow, deleteUser}) => {\n\n  const [pageOfItems, setPageOfItems] = useState([])\n\n  const onChangePage =(pageOfItems)=>{\n    setPageOfItems(pageOfItems);\n}\n\n  return(\n  <React.Fragment>\n  <table >\n    <thead>\n      <tr onClick={(ev)=>{\n        let sortKey = ev.target.innerText.trim();\n        if(sortKey !== \"Actions\" && sortKey.length>0){\n          sortBy(sortKey);\n        }\n      }} style={{cursor:'pointer'}}>\n        <th>Name <i className=\"fa fa-sort\" aria-hidden=\"true\"></i></th>\n        <th>Address <i className=\"fa fa-sort\" aria-hidden=\"true\"></i></th>\n        <th>Dob <i className=\"fa fa-sort\" aria-hidden=\"true\"></i></th>\n        <th>Gender <i className=\"fa fa-sort\" aria-hidden=\"true\"></i></th>\n        <th>Class <i className=\"fa fa-sort\" aria-hidden=\"true\"></i></th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {pageOfItems.length > 0 ? (\n        pageOfItems.map(user => (\n          <tr key={user.id+\"_\"+user.name}>\n            <td  style={{padding:'5px'}}>{user.name}</td>\n            <td>{user.address}</td>\n            <td>{user.dob}</td>\n            <td>{user.gender}</td>\n            <td>{user.class}</td>\n            <td>\n            <i className=\"fa fa-pencil\" aria-hidden=\"true\" style={{cursor:'pointer'}}  onClick={() => {\n                  editRow(user)\n                }}></i>\n\n              &nbsp;\n              <i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={() => deleteUser(user.id)} style={{cursor:'pointer'}}></i>\n\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No Students</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n  <Pagination items={studensList} onChangePage={onChangePage} initialPage={1}/>\n  </React.Fragment>\n)}\n\nStudentTable.propTypes={\n  studensList:PropTypes.array.isRequired, \n  sortBy: PropTypes.func.isRequired,\n  editRow: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired\n}\n\nexport default StudentTable\n\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst SearchInput = ({filterUser}) => {\n  const initialFormState = \"\";\n  const [filter, setFilter] = useState(initialFormState);\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  return (\n    <form onSubmit={event => {\n        event.preventDefault();\n      }}\n    >\n      <label>Name</label>\n      <div style={{ display: \"flex\" }}>\n        <input type=\"search\" name=\"search\" value={filter} onChange={handleInputChange}/>\n        &nbsp;\n        <button className=\"btn btn-info\" onClick={() => filterUser(filter)}>\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nSearchInput.propTypes = {\n  name: PropTypes.func\n};\n\nexport default SearchInput;","/**\n * sortBy for sorting data\n *\n * @param  {array} b Data point\n * @param  {key} b Data point\n * @return {array}   sorted data\n * @public\n */\nconst sortBy = (array, key) =>{\n    let sortData = array.sort( (a,b) => {\n      const dataA = a[key.toLowerCase()].toLowerCase();\n      const dataB = b[key.toLowerCase()].toLowerCase();\n      \n      let comparison = 0;\n      if (dataA > dataB) {\n        comparison = 1;\n      } else if (dataA < dataB) {\n        comparison = -1;\n      }\n      return comparison;\n    });\n\n    return sortData;\n}\n\nexport default sortBy;\n","const defaultStudentsData= [\n    { id: 1, name: \"Mohammad\", address: \"pune\", dob:'2020-11-19', gender:'male', class:'12th' },\n    { id: 2, name: \"Ajay\", address: \"Mumbai\", dob:'2020-11-13', gender:'male', class:'1st' },\n    { id: 3, name: \"Mazor\", address: \"Andhara\", dob:'2020-11-11', gender:'male', class:'11th' },\n    { id: 4, name: \"Vishwas\", address: \"Telangana\", dob:'2020-11-19', gender:'male', class:'7th' },\n    { id: 5, name: \"Komal\", address: \"Khammam\", dob:'2020-11-19', gender:'female', class:'6th' },\n    { id: 6, name: \"Zafar\", address: \"Bangalore\", dob:'2020-11-19', gender:'male', class:'11th' }\n]\n\nexport default defaultStudentsData;","import React, { useState, Fragment, useEffect } from \"react\";\nimport AddStudentFrom from \"./components/forms/AddStudentFrom\";\nimport EditStudentForm from \"./components/forms/EditStudentForm\";\nimport StudentTable from \"./components/tables/StudentTable\";\nimport SearchInput from \"./components/search/SeachInput\";\nimport sortBy from \"./helpers/sortBy\";\nimport defaultStudentsData from \"./data/student\";\n\n  // Data\n\n  const initialFormState = {\n    id: null,\n    name: \"\",\n    address: \"\",\n    dob: \"\",\n    gender: \"\",\n    class: \"\"\n  };\n\n\nconst App = () => {\n\n  // Setting state\n  const [students, setStudents] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [currentStudent, setcurrentStudent] = useState(initialFormState);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    //can api call or action call\n    setStudents(defaultStudentsData);\n    return () => {\n      \n    }\n  }, [])\n\n  // CRUD operations\n  const addStudentHandler = student => {\n    student.id = students.length + 1;\n    setStudents([...students, student]);\n    setFilter([]);\n  };\n\n  const deleteStudentHandler = id => {\n    setEditing(false);\n    setStudents(students.filter(user => user.id !== id));\n    setFilter([]);\n  };\n\n  const updateStudentHandler = (id, updatedStudent) => {\n    setEditing(false);\n    setStudents(students.map(student => (student.id === id ? updatedStudent : student)));\n    setFilter([]);\n  };\n\n  const editRowHandler = student => {\n    setEditing(true);\n    setcurrentStudent({\n      id: student.id,\n      name: student.name,\n      address: student.address,\n      dob: student.dob,\n      gender: student.gender,\n      class: student.class\n    });\n    setFilter([]);\n  };\n\n  const filterUserHandler = searchText => {\n    const filter = students.filter(student => student.name.indexOf(searchText) !== -1);\n    setFilter(filter);\n  };\n\n  const sortByHandler = key =>{\n    let data =  sortBy(students, key)\n    setStudents([...data]);\n   }\n\n  return (\n    <div className=\"\">\n      <h3>Blackberry Student Form</h3>\n      <div className=\"row\">\n        <div className=\"col-sm-3 border w-25 p-3\">\n          {editing ? (\n            <Fragment>\n              <h2>Edit Student</h2>\n              <EditStudentForm\n                editing={editing}\n                setEditing={setEditing}\n                currentStudent={currentStudent}\n                updateUser={updateStudentHandler}\n              />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <h4>Add Student</h4>\n              <AddStudentFrom addStudent={addStudentHandler} />\n            </Fragment>\n          )}\n        </div>\n        \n        <div className=\"col-sm-9 border border-primary\">\n          <h4>View Students</h4>\n          <SearchInput filterUser={filterUserHandler} />\n          <StudentTable\n            studensList={filter.length > 0 ? filter : students}\n            editRow={editRowHandler}\n            deleteUser={deleteStudentHandler}\n            sortBy={sortByHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}